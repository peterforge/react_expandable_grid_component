{"ast":null,"code":"import _objectSpread from \"/Users/peterbirlem/Documents/QuickSilver_DSM/react_expandable_grid_component/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/Users/peterbirlem/Documents/QuickSilver_DSM/react_expandable_grid_component/src/ReactTable/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTable, useResizeColumns, useFlexLayout, useExpanded } from \"react-table\";\nimport classnames from \"classnames\";\nimport \"./react-table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ReactTable = function ReactTable(props) {\n  _s();\n\n  var _props$className = props.className,\n      className = _props$className === void 0 ? \"\" : _props$className,\n      data = props.data,\n      columns = props.columns,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$getTdProps = props.getTdProps,\n      getTdProps = _props$getTdProps === void 0 ? function () {} : _props$getTdProps,\n      _props$trClassName = props.trClassName,\n      trClassName = _props$trClassName === void 0 ? \"\" : _props$trClassName,\n      SubComponent = props.SubComponent;\n  var defaultColumn = {\n    minWidth: 30,\n    width: 50,\n    maxWidth: 400\n  };\n\n  if (SubComponent) {\n    columns.unshift({\n      Header: \"\",\n      id: \"expander\",\n      resizable: false,\n      className: \"text-center\",\n      Cell: function Cell(_ref) {\n        var row = _ref.row;\n        return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, row.getToggleRowExpandedProps()), {}, {\n          title: \"Click here to see more information\",\n          className: \"rt-td rt-expandable p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classnames(\"rt-expander\", row.isExpanded ? \"-open\" : \"\"),\n            children: \"\\u2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this);\n      }\n    });\n  }\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    defaultColumn: defaultColumn,\n    SubComponent: SubComponent\n  }, useFlexLayout, useResizeColumns, useExpanded),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames(className, \"ReactTable\"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getTableProps), {}, {\n      className: \"rt-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rt-thead -header\",\n        children: headerGroups.map(function (headerGroup) {\n          return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n            className: \"rt-tr\",\n            children: headerGroup.headers.map(function (column) {\n              return column.resizable === false ? /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n                className: \"rt-th\",\n                children: column.render(\"Header\")\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, _this) : /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n                className: \"rt-th rt-resizable-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"rt-resizable-header-content\",\n                  children: column.render(\"Header\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, column.getResizerProps()), {}, {\n                  className: \"rt-resizer\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, _this)]\n              }), void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rt-tbody\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n          className: \"rt-tr-group\",\n          children: rows.map(function (row, ind) {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n                className: classnames(\"rt-tr\", ind % 2 === 0 ? \"-odd\" : \"-even\", trClassName),\n                children: row.cells.map(function (cell) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread(_objectSpread({}, getTdProps(cell)), cell.getCellProps()), {}, {\n                    className: classnames(\"rt-td\", cell.column.className),\n                    children: cell.render(\"Cell\")\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 25\n                  }, _this);\n                })\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, _this), row.isExpanded ? SubComponent({\n                row: row\n              }) : null]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, _this);\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames(\"-loading\", loading ? \"-active\" : \"\"),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-loading-inner\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ReactTable, \"8mpkizvDxwgTCSR1LNPZBFZzymM=\", false, function () {\n  return [useTable];\n});\n\n_c = ReactTable;\nexport default ReactTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactTable\");","map":{"version":3,"names":["React","useTable","useResizeColumns","useFlexLayout","useExpanded","classnames","ReactTable","props","className","data","columns","loading","getTdProps","trClassName","SubComponent","defaultColumn","minWidth","width","maxWidth","unshift","Header","id","resizable","Cell","row","getToggleRowExpandedProps","isExpanded","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getResizerProps","ind","getRowProps","cells","cell","getCellProps"],"sources":["/Users/peterbirlem/Documents/QuickSilver_DSM/react_expandable_grid_component/src/ReactTable/index.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  useTable,\r\n  useResizeColumns,\r\n  useFlexLayout,\r\n  useExpanded\r\n} from \"react-table\";\r\nimport classnames from \"classnames\";\r\nimport \"./react-table.css\";\r\n\r\nconst ReactTable = (props) => {\r\n  const {\r\n    className = \"\",\r\n    data,\r\n    columns,\r\n    loading = false,\r\n    getTdProps = () => {},\r\n    trClassName = \"\",\r\n    SubComponent\r\n  } = props;\r\n\r\n  const defaultColumn = {\r\n    minWidth: 30,\r\n    width: 50,\r\n    maxWidth: 400\r\n  };\r\n\r\n  if (SubComponent) {\r\n    columns.unshift({\r\n      Header: \"\",\r\n      id: \"expander\",\r\n      resizable: false,\r\n      className: \"text-center\",\r\n      Cell: ({ row }) => {\r\n        return (\r\n          <div\r\n            {...row.getToggleRowExpandedProps()}\r\n            title=\"Click here to see more information\"\r\n            className=\"rt-td rt-expandable p-0\"\r\n          >\r\n            <div\r\n              className={classnames(\r\n                \"rt-expander\",\r\n                row.isExpanded ? \"-open\" : \"\"\r\n              )}\r\n            >\r\n              â€¢\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow\r\n  } = useTable(\r\n    { columns, data, defaultColumn, SubComponent },\r\n    useFlexLayout,\r\n    useResizeColumns,\r\n    useExpanded\r\n  );\r\n\r\n  return (\r\n    <div className={classnames(className, \"ReactTable\")}>\r\n      <div {...getTableProps} className=\"rt-table\">\r\n        <div className=\"rt-thead -header\">\r\n          {headerGroups.map((headerGroup) => (\r\n            <div {...headerGroup.getHeaderGroupProps()} className=\"rt-tr\">\r\n              {headerGroup.headers.map((column) => {\r\n                return column.resizable === false ? (\r\n                  <div {...column.getHeaderProps()} className=\"rt-th\">\r\n                    {column.render(\"Header\")}\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    {...column.getHeaderProps()}\r\n                    className=\"rt-th rt-resizable-header\"\r\n                  >\r\n                    <div className=\"rt-resizable-header-content\">\r\n                      {column.render(\"Header\")}\r\n                    </div>\r\n                    <div {...column.getResizerProps()} className=\"rt-resizer\" />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"rt-tbody\">\r\n          <div {...getTableBodyProps()} className=\"rt-tr-group\">\r\n            {rows.map((row, ind) => {\r\n              prepareRow(row);\r\n              return (\r\n                <React.Fragment key={row.id}>\r\n                  <div\r\n                    {...row.getRowProps()}\r\n                    className={classnames(\r\n                      \"rt-tr\",\r\n                      ind % 2 === 0 ? \"-odd\" : \"-even\",\r\n                      trClassName\r\n                    )}\r\n                  >\r\n                    {row.cells.map((cell) => {\r\n                      return (\r\n                        <div\r\n                          {...getTdProps(cell)}\r\n                          {...cell.getCellProps()}\r\n                          className={classnames(\"rt-td\", cell.column.className)}\r\n                        >\r\n                          {cell.render(\"Cell\")}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  {row.isExpanded ? SubComponent({ row }) : null}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={classnames(\"-loading\", loading ? \"-active\" : \"\")}>\r\n        <div className=\"-loading-inner\">Loading...</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReactTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}